{"ast":null,"code":"var _jsxFileName = \"/Users/brookemadison/Desktop/ucf-bootcamp/react-portfolio/src/components/Project/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from '../Modal';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Project({\n  category\n}) {\n  _s();\n\n  const [featuredProjects] = useState([{\n    index: 0,\n    name: 'Project Three',\n    shortdesc: 'Coming soon..',\n    tech: 'HTML, CSS, JavaScript, Node.js, Express.js, MongoDB, Mongoose ODM, GraphQL, JWT, Heroku',\n    description: 'description coming soon',\n    github: 'https://github.com/brookemadison/'\n  }, {\n    index: 1,\n    name: 'Decide Eat',\n    shortdesc: 'Decide what to eat, drink, and listen to on your date night',\n    tech: 'HTML, CSS, JavaScript, jQuery, Bulma, Spoonacular API, Spotify API',\n    description: 'Decide Eat was crafted to offer a unique experience on date night in. This app will elevate your date night by bringing the fun to the comfort of your home. Remove the stress of deciding by taking the quiz that pairs you with a recipe, cocktail, and music playlist recommendation.',\n    github: 'https://github.com/Padredilg/decide-eat',\n    deployed: 'https://padredilg.github.io/decide-eat/'\n  }, {\n    index: 2,\n    name: 'Pokedex',\n    shortdesc: 'An online Pokédex that allows users to view and search for their favorite original 151 Pokémon.',\n    tech: 'HTML, CSS, JavaScript, Node.js, Express.js, MySQL, dotenv, Heroku, JawsDB, Sequeliz, Bcrypt, express-session, Handlebars, animate.css, PokéAPI',\n    description: 'The user MUST create an account first by username, email and password. The password MUST be at least 10 characters long. Once logged in, the user is then sent to the dashboard where they are presented with a search form. In this form they may type in the name of any of the original 151 Pokémon. Once the data is sent, the result brings up a card. The Pokémon stats will display along with the username written on the card. Congratulations! You caught your first Pokémon! To do another search simply click on the dashboard button. When you have finished your hunt, you may hit the logout button!',\n    github: 'https://github.com/Lightfooted/pokedex-project',\n    deployed: 'https://protected-hamlet-00069.herokuapp.com/'\n  }]);\n  const [nonFeaturedProjects] = useState([{\n    index: 3,\n    name: 'Weather Dashboard',\n    shortdesc: 'Check the weather for any city',\n    tech: 'HTML, CSS, JavaScript, Bootstrap, OpenWeatherMap API',\n    description: 'Find out what the weather prospects are for any city that is listed in the OpenWeatherMap API. Cities previously searched will be listed on the left as clickable buttons and storaged in the browser localStorage. Storage and buttons can be cleared at any time.',\n    github: 'https://github.com/Padredilg/weather-dashboard',\n    deployed: 'https://padredilg.github.io/weather-dashboard/'\n  }, {\n    index: 3,\n    name: 'Budget Tracker',\n    shortdesc: 'A budget tracker that can be used without an internet connection',\n    tech: 'HTML, CSS, JavaScript, indexedDb, Service-Workers, manifest.json, express.js, MongoDB, Mongoose',\n    description: 'Having offline functionality is paramount to the success of an application that handles users’ financial information. This budget tracker application allows for offline access and functionality. The user will be able to add expenses and deposits to their budget with or without a connection. If the user enters transactions offline, the total should be updated when they are brought back online.',\n    github: 'https://github.com/brookemadison/budget-tracker',\n    deployed: 'https://budget-tracker-padredilg.herokuapp.com/'\n  }, {\n    index: 5,\n    name: 'Tech Blog',\n    shortdesc: 'Post about new Tech and Code',\n    tech: 'express, express-handlebars, CSS, JavaScript, bcrypt, connect-session-sequelize, dotenv, express-session, mysql2, sequelize',\n    description: 'Tech Blog is exactly what the name suggests, a blog directed for tech lovers! Users can create their accounts, create posts, and interact with each other\\'s posts by commenting or liking them.',\n    github: 'https://github.com/Padredilg/tech-blog',\n    deployed: 'https://tech-blog-padredilg.herokuapp.com/'\n  }, {\n    index: 6,\n    name: 'Team Profile Generator',\n    shortdesc: 'Keep track of your engineering team',\n    tech: 'HTML, CSS JavaScript, Inquirer, Jest',\n    description: 'Information on how to use this app can be found by clicking on the Github link above. This application requires the user to use the terminal on their IDE environment to input the information about their team. Upon starting the application the user will be prompted for the information about each team member. Upon completion, the html file containing the team roster will be automatically generated.',\n    github: 'https://github.com/Padredilg/team-profile-generator',\n    deployed: null\n  }, {\n    index: 7,\n    name: 'Git it Done',\n    shortdesc: \"Track Github Repos and their open Issues\",\n    tech: 'HTML, CSS JavaScript',\n    description: 'Search repos by user, or look up some other repos by topic to find out what are the open issues in them.',\n    github: 'https://github.com/Padredilg/git-it-done',\n    deployed: 'https://padredilg.github.io/git-it-done/'\n  }, {\n    index: 8,\n    name: 'Taskmaster',\n    shortdesc: \"Keep an eye on your upcoming tasks\",\n    tech: 'HTML, CSS, JavaScript, jQuery, Bootstrap',\n    description: 'A friendly and interactive program for the user to organize their tasks by date, and to keep track of their deadlines.',\n    github: 'https://github.com/Padredilg/taskmaster-pro',\n    deployed: 'https://padredilg.github.io/taskmaster-pro/'\n  }, {\n    index: 9,\n    name: 'Pizza Hunt',\n    shortdesc: \"Share your favorite pizza with others\",\n    tech: 'HTML, CSS, JavaScript, Express.js, MongoDB, Mongoose',\n    description: \"Pizza hunt is a simple social media in which users can share their ideas about tasty and innovative pizza combinations. Users can comment on other's creations and also reply to comments.\",\n    github: 'https://github.com/Padredilg/pizza-hunt',\n    deployed: 'https://pizza-hunt-padredilg.herokuapp.com/'\n  }, {\n    index: 10,\n    name: 'Photo-Port',\n    shortdesc: \"Photo Portfolio for Lyza\",\n    tech: 'React and its dependencies',\n    description: \"This is a simple portfolio created for Lyza using React. The portfolio was created according to the mock up provided by her.\",\n    github: 'https://github.com/Padredilg/photo-port',\n    deployed: 'https://padredilg.github.io/photo-port/'\n  }, {\n    index: 11,\n    name: 'Password Generator',\n    shortdesc: \"Generate unique passwords\",\n    tech: 'HTML, CSS, JavaScript',\n    description: \"Generate a password according to the criteria you define.\",\n    github: 'https://github.com/Padredilg/password-generator',\n    deployed: 'https://padredilg.github.io/password-generator/'\n  }, {\n    index: 12,\n    name: 'My First Portfolio',\n    shortdesc: \"First portfolio that I created\",\n    tech: 'HTML, CSS',\n    description: \"Within two weeks of learning how to code using HTML and CSS, I challenged myself to create this portfolio. It is now outdated as it is not the portfolio that I use anymore.\",\n    github: 'https://github.com/Padredilg/my-first-portfolio',\n    deployed: 'https://padredilg.github.io/my-first-portfolio/'\n  }, {\n    index: 13,\n    name: 'e-Commerce Back-End',\n    shortdesc: \"Back-end structure for an e-Commerce site\",\n    tech: 'JavaScript, dotenv, express, mysql2, sequelize',\n    description: \"Back-End structure for a company's software that needs to store info about Products, along with their Categories, and Tags. This program does not have a front-end, but it can be tested using a REST API Client such as Insomnia. Installation and Walkthrough video can be found at the github link above.\",\n    github: 'https://github.com/Padredilg/e-commerce-back-end',\n    deployed: null\n  }]);\n  const [currentProject, setCurrentProject] = useState({});\n  const [show, setShow] = useState(false);\n\n  const handleShow = currentProj => {\n    setCurrentProject(currentProj);\n    setShow(true);\n  };\n\n  const handleClose = () => setShow(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-wrapper\",\n      children: featuredProjects.map((project, i) => /*#__PURE__*/_jsxDEV(Button, {\n        className: \"project-button\",\n        variant: \"link\",\n        onClick: () => {\n          handleShow(featuredProjects[i]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../../assets/projects/${i}.png`).default,\n          alt: project.name,\n          className: \"project-image featured-project\"\n        }, project.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"project-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"label-title\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label-description\",\n            children: project.shortdesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label-read-more\",\n            children: \"Click to Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-wrapper\",\n      children: nonFeaturedProjects.map((project, i) => /*#__PURE__*/_jsxDEV(Button, {\n        className: \"project-button\",\n        variant: \"link\",\n        onClick: () => {\n          handleShow(nonFeaturedProjects[i]);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../../assets/projects/${project.index}.png`).default,\n          alt: project.name,\n          className: \"project-image\"\n        }, project.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"project-label small-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"label-title\",\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label-description\",\n            children: project.shortdesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label-read-more\",\n            children: \"Click to Read More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), show ? /*#__PURE__*/_jsxDEV(Modal, {\n      currentProject: currentProject,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Project, \"I1Utcowau9tLAyky+NHGu9DyhFQ=\");\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/brookemadison/Desktop/ucf-bootcamp/react-portfolio/src/components/Project/index.js"],"names":["React","useState","Modal","Button","Project","category","featuredProjects","index","name","shortdesc","tech","description","github","deployed","nonFeaturedProjects","currentProject","setCurrentProject","show","setShow","handleShow","currentProj","handleClose","map","project","i","require","default"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Modal from '../Modal';\nimport { Button } from 'react-bootstrap'\n\nfunction Project({ category }) {\n  const [featuredProjects] = useState([\n    {\n      index: 0,\n      name: 'Project Three',\n      shortdesc: 'Coming soon..',\n      tech: 'HTML, CSS, JavaScript, Node.js, Express.js, MongoDB, Mongoose ODM, GraphQL, JWT, Heroku',\n      description: 'description coming soon',\n      github: 'https://github.com/brookemadison/',\n    },\n    {\n      index: 1,\n      name: 'Decide Eat',\n      shortdesc: 'Decide what to eat, drink, and listen to on your date night',\n      tech: 'HTML, CSS, JavaScript, jQuery, Bulma, Spoonacular API, Spotify API',\n      description: 'Decide Eat was crafted to offer a unique experience on date night in. This app will elevate your date night by bringing the fun to the comfort of your home. Remove the stress of deciding by taking the quiz that pairs you with a recipe, cocktail, and music playlist recommendation.',\n      github: 'https://github.com/Padredilg/decide-eat',\n      deployed: 'https://padredilg.github.io/decide-eat/'\n    },\n    {\n      index: 2,\n      name: 'Pokedex',\n      shortdesc: 'An online Pokédex that allows users to view and search for their favorite original 151 Pokémon.',\n      tech: 'HTML, CSS, JavaScript, Node.js, Express.js, MySQL, dotenv, Heroku, JawsDB, Sequeliz, Bcrypt, express-session, Handlebars, animate.css, PokéAPI',\n      description: 'The user MUST create an account first by username, email and password. The password MUST be at least 10 characters long. Once logged in, the user is then sent to the dashboard where they are presented with a search form. In this form they may type in the name of any of the original 151 Pokémon. Once the data is sent, the result brings up a card. The Pokémon stats will display along with the username written on the card. Congratulations! You caught your first Pokémon! To do another search simply click on the dashboard button. When you have finished your hunt, you may hit the logout button!',\n      github: 'https://github.com/Lightfooted/pokedex-project',\n      deployed: 'https://protected-hamlet-00069.herokuapp.com/'\n    },\n  ]);\n  const [nonFeaturedProjects] = useState([\n    {\n      index: 3,\n      name: 'Weather Dashboard',\n      shortdesc: 'Check the weather for any city',\n      tech: 'HTML, CSS, JavaScript, Bootstrap, OpenWeatherMap API',\n      description: 'Find out what the weather prospects are for any city that is listed in the OpenWeatherMap API. Cities previously searched will be listed on the left as clickable buttons and storaged in the browser localStorage. Storage and buttons can be cleared at any time.',\n      github: 'https://github.com/Padredilg/weather-dashboard',\n      deployed: 'https://padredilg.github.io/weather-dashboard/'\n    },\n    {\n      index: 3,\n      name: 'Budget Tracker',\n      shortdesc: 'A budget tracker that can be used without an internet connection',\n      tech: 'HTML, CSS, JavaScript, indexedDb, Service-Workers, manifest.json, express.js, MongoDB, Mongoose',\n      description: 'Having offline functionality is paramount to the success of an application that handles users’ financial information. This budget tracker application allows for offline access and functionality. The user will be able to add expenses and deposits to their budget with or without a connection. If the user enters transactions offline, the total should be updated when they are brought back online.',\n      github: 'https://github.com/brookemadison/budget-tracker',\n      deployed: 'https://budget-tracker-padredilg.herokuapp.com/'\n    },\n    {\n      index: 5,\n      name: 'Tech Blog',\n      shortdesc: 'Post about new Tech and Code',\n      tech: 'express, express-handlebars, CSS, JavaScript, bcrypt, connect-session-sequelize, dotenv, express-session, mysql2, sequelize',\n      description: 'Tech Blog is exactly what the name suggests, a blog directed for tech lovers! Users can create their accounts, create posts, and interact with each other\\'s posts by commenting or liking them.',\n      github: 'https://github.com/Padredilg/tech-blog',\n      deployed: 'https://tech-blog-padredilg.herokuapp.com/'\n    },\n    {\n      index: 6,\n      name: 'Team Profile Generator',\n      shortdesc: 'Keep track of your engineering team',\n      tech: 'HTML, CSS JavaScript, Inquirer, Jest',\n      description: 'Information on how to use this app can be found by clicking on the Github link above. This application requires the user to use the terminal on their IDE environment to input the information about their team. Upon starting the application the user will be prompted for the information about each team member. Upon completion, the html file containing the team roster will be automatically generated.',\n      github: 'https://github.com/Padredilg/team-profile-generator',\n      deployed: null\n    },\n    {\n      index: 7,\n      name: 'Git it Done',\n      shortdesc: \"Track Github Repos and their open Issues\",\n      tech: 'HTML, CSS JavaScript',\n      description: 'Search repos by user, or look up some other repos by topic to find out what are the open issues in them.',\n      github: 'https://github.com/Padredilg/git-it-done',\n      deployed: 'https://padredilg.github.io/git-it-done/'\n    },\n    {\n      index: 8,\n      name: 'Taskmaster',\n      shortdesc: \"Keep an eye on your upcoming tasks\",\n      tech: 'HTML, CSS, JavaScript, jQuery, Bootstrap',\n      description: 'A friendly and interactive program for the user to organize their tasks by date, and to keep track of their deadlines.',\n      github: 'https://github.com/Padredilg/taskmaster-pro',\n      deployed: 'https://padredilg.github.io/taskmaster-pro/'\n    },\n    {\n      index: 9,\n      name: 'Pizza Hunt',\n      shortdesc: \"Share your favorite pizza with others\",\n      tech: 'HTML, CSS, JavaScript, Express.js, MongoDB, Mongoose',\n      description: \"Pizza hunt is a simple social media in which users can share their ideas about tasty and innovative pizza combinations. Users can comment on other's creations and also reply to comments.\",\n      github: 'https://github.com/Padredilg/pizza-hunt',\n      deployed: 'https://pizza-hunt-padredilg.herokuapp.com/'\n    },\n    {\n      index: 10,\n      name: 'Photo-Port',\n      shortdesc: \"Photo Portfolio for Lyza\",\n      tech: 'React and its dependencies',\n      description: \"This is a simple portfolio created for Lyza using React. The portfolio was created according to the mock up provided by her.\",\n      github: 'https://github.com/Padredilg/photo-port',\n      deployed: 'https://padredilg.github.io/photo-port/'\n    },\n    {\n      index: 11,\n      name: 'Password Generator',\n      shortdesc: \"Generate unique passwords\",\n      tech: 'HTML, CSS, JavaScript',\n      description: \"Generate a password according to the criteria you define.\",\n      github: 'https://github.com/Padredilg/password-generator',\n      deployed: 'https://padredilg.github.io/password-generator/'\n    },\n    {\n      index: 12,\n      name: 'My First Portfolio',\n      shortdesc: \"First portfolio that I created\",\n      tech: 'HTML, CSS',\n      description: \"Within two weeks of learning how to code using HTML and CSS, I challenged myself to create this portfolio. It is now outdated as it is not the portfolio that I use anymore.\",\n      github: 'https://github.com/Padredilg/my-first-portfolio',\n      deployed: 'https://padredilg.github.io/my-first-portfolio/'\n    },\n    {\n      index: 13,\n      name: 'e-Commerce Back-End',\n      shortdesc: \"Back-end structure for an e-Commerce site\",\n      tech: 'JavaScript, dotenv, express, mysql2, sequelize',\n      description: \"Back-End structure for a company's software that needs to store info about Products, along with their Categories, and Tags. This program does not have a front-end, but it can be tested using a REST API Client such as Insomnia. Installation and Walkthrough video can be found at the github link above.\",\n      github: 'https://github.com/Padredilg/e-commerce-back-end',\n      deployed: null\n    },\n  ]);\n\n  const [currentProject, setCurrentProject] = useState({});\n\n  const [show, setShow] = useState(false);\n  const handleShow = (currentProj) => {\n    setCurrentProject(currentProj)\n    setShow(true);\n  };\n  const handleClose = () => setShow(false);\n\n  return (\n    <div>\n      {/* featured projects */}\n      <div className=\"projects-wrapper\">\n        {featuredProjects.map((project, i) => (\n          <Button\n            className=\"project-button\"\n            variant=\"link\"\n            onClick={() => { handleShow(featuredProjects[i]) }}\n          >\n            <img\n              src={require(`../../assets/projects/${i}.png`).default}\n              alt={project.name}\n              className=\"project-image featured-project\"\n              key={project.name}\n            />\n            <div class=\"project-label\">\n              <h6 className=\"label-title\">{project.name}</h6>\n              <p className=\"label-description\">{project.shortdesc}</p>\n              <p className=\"label-read-more\">Click to Read More</p>\n            </div>\n\n          </Button>\n        ))}\n      </div>\n      {/* non-featured-projects */}\n      <div className=\"projects-wrapper\">\n        {nonFeaturedProjects.map((project, i) => (\n          <Button\n            className=\"project-button\"\n            variant=\"link\"\n            onClick={() => { handleShow(nonFeaturedProjects[i]) }}\n          >\n            <img\n              src={require(`../../assets/projects/${project.index}.png`).default}\n              alt={project.name}\n              className=\"project-image\"\n              key={project.name}\n            />\n            <div class=\"project-label small-label\">\n              <h6 className=\"label-title\">{project.name}</h6>\n              <p className=\"label-description\">{project.shortdesc}</p>\n              <p className=\"label-read-more\">Click to Read More</p>\n            </div>\n\n          </Button>\n        ))}\n      </div>\n      {show ? <Modal currentProject={currentProject} onClose={handleClose} /> : null}\n    </div>\n  )\n}\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}