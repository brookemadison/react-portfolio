{"ast":null,"code":"var _jsxFileName = \"/Users/brookemadison/Desktop/ucf-bootcamp/react-portfolio/src/components/Modal/index.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import { Button, Modal, CloseButton } from 'react-bootstrap'\n// function ProjectModal({ onClose, currentProject }) {\n//     const { name, index, description, tech, github, deployed } = currentProject;\n//     return (\n//         <Modal show onHide={onClose} size=\"lg\">\n//             <Modal.Header>\n//                 <Modal.Title>{name}</Modal.Title>\n//                 <CloseButton variant=\"white\" onClick={onClose} />\n//             </Modal.Header>\n//             <Modal.Body>\n//                 {/* Project Image */}\n//                 <img\n//                     src={require(`../../assets/projects/${index}.png`).default}\n//                     alt={name}\n//                     className=\"modal-image\"\n//                 />\n//                 {/* Links to github and deployed */}\n//                 <div className=\"modal-links\">\n//                     <a href={github} target=\"_blank\"\n//                     rel=\"noreferrer\"\n//                     >\n//                         <img\n//                             src={require(`../../assets/links/github.png`).default}\n//                             alt='github link'\n//                             className=\"modal-link\"\n//                         />\n//                     </a>\n//                     {deployed ?  \n//                         <a href={deployed} target=\"_blank\"\n//                         rel=\"noreferrer\"\n//                         >\n//                             <img\n//                                 src={require(`../../assets/links/deployed.png`).default}\n//                                 alt='github link'\n//                                 className=\"modal-link\"\n//                             />\n//                         </a>\n//                     : null}\n//                 </div>\n//                 {/* Description */}\n//                 <h5 className=\"mt-3 modal-section-title\">Description:</h5>\n//                 <p className=\"modal-text\">{description}</p>\n//                 {/* Tech */}\n//                 <h5 className=\"mt-3 modal-section-title\">Tech Used:</h5>\n//                 <p className=\"modal-text\">{tech}</p>\n//             </Modal.Body>\n//             <Modal.Footer>\n//                 <Button variant=\"outline-light\" onClick={onClose}>\n//                     Close\n//                 </Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// }\n// export default ProjectModal;\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = ({\n  selectedImage,\n  onNext,\n  onPrev,\n  onClose\n}) => {\n  _s();\n\n  const [showLeftArrow, setShowLeftArrow] = useState(false);\n  const [showRightArrow, setShowRightArrow] = useState(false);\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => onNext(),\n    onSwipedRight: () => onPrev(),\n    onSwipedDown: e => onClose(),\n    trackMouse: true,\n    trackTouch: true,\n    preventDefaultTouchmoveEvent: true\n  });\n  const handleKeyPress = useCallback(e => {\n    switch (e.code) {\n      case \"Escape\":\n        onClose();\n        break;\n\n      case \"ArrowRight\":\n        onNext();\n        break;\n\n      case \"ArrowLeft\":\n        onPrev();\n        break;\n\n      default:\n        break;\n    }\n  }, [onClose, onNext, onPrev]);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightbox-backdrop\",\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lightbox-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lightbox-header-shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"back-button\",\n          src: \"icons/left-arrow.svg\",\n          alt: \"back-button-icon\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", { ...swipeHandlers,\n        className: \"lightbox-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-container left-arrow\",\n          onClick: onPrev,\n          onMouseEnter: () => setShowLeftArrow(true),\n          onMouseLeave: () => setShowLeftArrow(false),\n          children: showLeftArrow ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"icons/chevron-left.svg\",\n            alt: \"left arrow icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"lightbox-image\",\n          src: selectedImage.src,\n          alt: selectedImage.alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow-container right-arrow\",\n          onClick: onNext,\n          onMouseEnter: () => setShowRightArrow(true),\n          onMouseLeave: () => setShowRightArrow(false),\n          children: showRightArrow ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"icons/chevron-right.svg\",\n            alt: \"right arrow icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Modal, \"5ilZHUyjikpOCjMsjgHg2EXXaCY=\", false, function () {\n  return [useSwipeable];\n});\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/brookemadison/Desktop/ucf-bootcamp/react-portfolio/src/components/Modal/index.js"],"names":["React","useState","useEffect","useCallback","useSwipeable","Modal","selectedImage","onNext","onPrev","onClose","showLeftArrow","setShowLeftArrow","showRightArrow","setShowRightArrow","swipeHandlers","onSwipedLeft","onSwipedRight","onSwipedDown","e","trackMouse","trackTouch","preventDefaultTouchmoveEvent","handleKeyPress","code","window","addEventListener","removeEventListener","src","alt"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import { Button, Modal, CloseButton } from 'react-bootstrap'\n\n// function ProjectModal({ onClose, currentProject }) {\n//     const { name, index, description, tech, github, deployed } = currentProject;\n//     return (\n//         <Modal show onHide={onClose} size=\"lg\">\n//             <Modal.Header>\n//                 <Modal.Title>{name}</Modal.Title>\n//                 <CloseButton variant=\"white\" onClick={onClose} />\n//             </Modal.Header>\n\n//             <Modal.Body>\n//                 {/* Project Image */}\n//                 <img\n//                     src={require(`../../assets/projects/${index}.png`).default}\n//                     alt={name}\n//                     className=\"modal-image\"\n//                 />\n//                 {/* Links to github and deployed */}\n//                 <div className=\"modal-links\">\n//                     <a href={github} target=\"_blank\"\n//                     rel=\"noreferrer\"\n//                     >\n//                         <img\n//                             src={require(`../../assets/links/github.png`).default}\n//                             alt='github link'\n//                             className=\"modal-link\"\n//                         />\n//                     </a>\n//                     {deployed ?  \n//                         <a href={deployed} target=\"_blank\"\n//                         rel=\"noreferrer\"\n//                         >\n//                             <img\n//                                 src={require(`../../assets/links/deployed.png`).default}\n//                                 alt='github link'\n//                                 className=\"modal-link\"\n//                             />\n//                         </a>\n//                     : null}\n                    \n//                 </div>\n//                 {/* Description */}\n//                 <h5 className=\"mt-3 modal-section-title\">Description:</h5>\n//                 <p className=\"modal-text\">{description}</p>\n//                 {/* Tech */}\n//                 <h5 className=\"mt-3 modal-section-title\">Tech Used:</h5>\n//                 <p className=\"modal-text\">{tech}</p>\n//             </Modal.Body>\n\n//             <Modal.Footer>\n//                 <Button variant=\"outline-light\" onClick={onClose}>\n//                     Close\n//                 </Button>\n//             </Modal.Footer>\n//         </Modal>\n//     );\n// }\n\n// export default ProjectModal;\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\n\n\nconst Modal = ({ selectedImage, onNext, onPrev, onClose }) => {\n  const [showLeftArrow, setShowLeftArrow] = useState(false);\n  const [showRightArrow, setShowRightArrow] = useState(false);\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => onNext(),\n    onSwipedRight: () => onPrev(),\n    onSwipedDown: e => onClose(),\n    trackMouse: true,\n    trackTouch: true,\n    preventDefaultTouchmoveEvent: true\n  });\n\n  const handleKeyPress = useCallback(\n    e => {\n      switch (e.code) {\n        case \"Escape\":\n          onClose();\n          break;\n        case \"ArrowRight\":\n          onNext();\n          break;\n        case \"ArrowLeft\":\n          onPrev();\n          break;\n        default:\n          break;\n      }\n    },\n    [onClose, onNext, onPrev]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n\n  return (\n    <>\n      <div className=\"lightbox-backdrop\" onClick={onClose} />\n      <div className=\"lightbox-window\">\n        <div className=\"lightbox-header-shadow\">\n          <img\n            className=\"back-button\"\n            src=\"icons/left-arrow.svg\"\n            alt=\"back-button-icon\"\n            onClick={onClose}\n          />\n        </div>\n        <div {...swipeHandlers} className=\"lightbox-image-container\">\n          <div\n            className=\"arrow-container left-arrow\"\n            onClick={onPrev}\n            onMouseEnter={() => setShowLeftArrow(true)}\n            onMouseLeave={() => setShowLeftArrow(false)}\n          >\n            {showLeftArrow ? (\n              <img src=\"icons/chevron-left.svg\" alt=\"left arrow icon\" />\n            ) : null}\n          </div>\n          <img\n            id=\"lightbox-image\"\n            src={selectedImage.src}\n            alt={selectedImage.alt}\n          />\n          <div\n            className=\"arrow-container right-arrow\"\n            onClick={onNext}\n            onMouseEnter={() => setShowRightArrow(true)}\n            onMouseLeave={() => setShowRightArrow(false)}\n          >\n            {showRightArrow ? (\n              <img src=\"icons/chevron-right.svg\" alt=\"right arrow icon\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;"]},"metadata":{},"sourceType":"module"}